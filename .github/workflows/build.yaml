name: Build

on: [push]

jobs:
    build-windows:
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python 3.10 with dependencies
              uses: actions/setup-python@v5
              with:
                python-version: "3.10"
                cache: 'pip' #cache pip dependencies
            - run: |
                pip install pyinstaller
                if (Test-Path requirements.txt) { pip install -r requirements.txt }
            - name: Build server
              run: pyinstaller --onefile server.py
            - name: Build client.py
              run: pyinstaller --onefile client.py
            - name: Build createsert.py
              run: pyinstaller --onefile createsert.py
            - name: Build createsert.py
              run: pyinstaller --onefile uiclient.py
            - name: Delete old Windows artifact
              uses: geekyeggo/delete-artifact@v5
              with:
                name: windows-executable
            - name: Upload All artifact
              uses: actions/upload-artifact@v4
              with:
                name: windows-executable-${{ github.run_number }}
                path: dist/*.exe
            - name: Upload test DB
              uses: actions/upload-artifact@v4
              with:
                name: sqllite db
                path: app_database.db

    build-linux:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python 3.10 with dependencies
              uses: actions/setup-python@v5
              with:
                python-version: "3.10"
                cache: 'pip' #cache pip dependencies
            - run: |
                pip install pyinstaller
                if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            - name: Build Server
              run: pyinstaller --onefile server.py
            - name: Build Client
              run: pyinstaller --onefile client.py
            - name: Build Createsert
              run: pyinstaller --onefile createsert.py
            - name: Build createsert.py
              run: pyinstaller --onefile uiclient.py
            - name: Delete old Linux artifact
              uses: geekyeggo/delete-artifact@v5
              with:
                name: linux-executable
            - name: Upload Server artifact
              uses: actions/upload-artifact@v4
              with:
                name: linux-executable-${{ github.run_number }}
                path: dist/*            
    build-macos:
        runs-on: macos-latest
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python 3.10 with dependencies
              uses: actions/setup-python@v5
              with:
                python-version: "3.10"
                cache: 'pip' #cache pip dependencies
            - run: |
                pip install pyinstaller
                if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            - name: Build Server 
              run: pyinstaller --onefile server.py
            - name: Build Client
              run: pyinstaller --onefile client.py            
            - name: Build Createsert
              run: pyinstaller --onefile createsert.py
            - name: Build createsert.py
              run: pyinstaller --onefile uiclient.py
            - name: Delete old macos artifact
              uses: geekyeggo/delete-artifact@v5
              with:
                name: macos-executable
            - name: Upload createsert artifact
              uses: actions/upload-artifact@v4
              with:
                name: macos-executable-${{ github.run_number }}
                path: dist/*        
  